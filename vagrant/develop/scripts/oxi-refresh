#!/bin/bash
## <info> Copy latest code (/code-repo), install dependencies, restart OpenXPKI
test $(whoami) != "root" && echo "Please run this as root: sudo $0" && exit 1
set -o pipefail

#
# Exit handler
#
LOG=$(mktemp)
function _exit () {
    if [ $1 -ne 0 -a $1 -ne 333 ]; then
        echo "$0: ERROR - last command exited with code $1, output:" && cat $LOG
    fi
    rm -f $LOG
    exit $1
}
trap '_exit $?' EXIT

set -e

#
# Grab and install Perl module dependencies from Makefile.PL using PPI
#
# fix problems with newer Net::DNS:
rm -f /usr/lib/x86_64-linux-gnu/perl5/5.20/Net/DNS.pm
cpanm --notest Net::DNS

echo "Checking for new Perl dependencies in latest code"
cpanm --notest PPI                                                    >$LOG 2>&1
/code-repo/tools/scripts/makefile2cpanfile.pl > /cpanfile
cpanm --notest --installdeps /                                        >$LOG 2>&1

#
# Copy current code and realm CA-ONE config
#
echo "Copying current code and binaries from repo"
rsync -c -P -a  \
  /code-repo/config/openxpki/config.d/realm/ca-one/* \
  /etc/openxpki/config.d/realm/ca-one/                                >$LOG 2>&1

#
# Compile OpenXPKI.so
#
echo "Compiling and installing OpenXPKI"
cd /code-repo/core/server
perl Makefile.PL                                                      >$LOG 2>&1
make                                                                  >$LOG 2>&1
make install                                                          >$LOG 2>&1

if [ "$1" != "--no-restart" ]; then
    echo "Restarting OpenXPKI"
    openxpkictl restart >/dev/null                                    >$LOG 2>&1

    if [[ $(openxpkictl status 2>&1) == *"not running"* ]]; then
        echo "Error starting OpenXPKI"
        exit 333
    fi
fi
