<workflow>

  <type>I18N_OPENXPKI_WF_TYPE_CERTIFICATE_SIGNING_REQUEST_V2</type>
  <description>I18N_OPENXPKI_WF_DESC_CERTIFICATE_SIGNING_REQUEST</description>
  <persister>OpenXPKI</persister>
  <observer class="OpenXPKI::Server::Workflow::Observer::Debug"/>

  <state name="INITIAL">
    <description>I18N_OPENXPKI_WF_STATE_CERTIFICATE_SIGNING_REQUEST_INITIAL</description>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_SELECT_PROFILE"
        resulting_state="SETUP_REQUEST_TYPE">
    </action>
  </state>

  <state name="SETUP_REQUEST_TYPE">
    <description>Please choose how you want to provide the certificates private key or go back to select an alternative profile.</description>

    <action name="I18N_OPENXPKI_WF_ACTION_CSR_PROVIDE_SERVER_KEY_PARAMS"
        resulting_state="ENTER_KEY_PASSWORD">
    </action>

<!--  Not supported by UI yet
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_GENERATE_KEY_CLIENT"
            resulting_state="ENTER_SUBJECT">
    </action>
 -->
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_UPLOAD_PKCS10"
            resulting_state="ENTER_SUBJECT">
    </action>

    <action name="I18N_OPENXPKI_WF_ACTION_CSR_SELECT_PROFILE"
        resulting_state="SETUP_REQUEST_TYPE">
    </action>

  </state>

  <state name="ENTER_KEY_PASSWORD">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_RETYPE_SERVER_PASSWORD"
        resulting_state="PERSIST_KEY_PASSWORD">
        <condition name="csr_key_password_server"></condition>
    </action>

    <action name="I18N_OPENXPKI_WF_ACTION_CSR_ASK_CLIENT_PASSWORD"
        resulting_state="PERSIST_KEY_PASSWORD">
        <condition name="!csr_key_password_server"></condition>
    </action>
  </state>

  <state name="PERSIST_KEY_PASSWORD" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_PERSIST_KEY_PASSWORD"
            resulting_state="ENTER_SUBJECT">
    </action>
  </state>

  <state name="ENTER_SUBJECT">
    <description>Please enter the data requested below. This information is used to create the subject of your certificate.</description>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_SUBJECT"
        resulting_state="ENTER_SAN">
    </action>
  </state>

  <state name="ENTER_SAN">
    <description>Please enter the data requested below. This information is added as "subject alternative name" to the certificate.</description>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_SAN"
        resulting_state="ENTER_CERT_INFO">
    </action>
  </state>

  <state name="ENTER_CERT_INFO">
    <description>Please enter the data requested below. This information is for informational purpose only. It will be used by
    the registration officer to validate your request and link additional information to this certificate.</description>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_CERT_INFO"
        resulting_state="BUILD_SUBJECT">
    </action>
  </state>

  <state name="BUILD_SUBJECT" autorun="yes">
    <description></description>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_RENDER_SUBJECT"
        resulting_state="SUBJECT_COMPLETE">
    </action>
  </state>

  <state name="SUBJECT_COMPLETE">
    <description>All information has been collected, your request is ready to be processed now. Please validate the information
    listed below and use the edit buttons to change it if necessary. If the data is correct, please use the submit button to
    send the request to the registration officers.</description>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_SUBMIT"
        resulting_state="EVAL_ELIGIBILITY">
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_SUBJECT"
        resulting_state="BUILD_SUBJECT">
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_SAN"
        resulting_state="BUILD_SUBJECT">
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_CERT_INFO"
        resulting_state="BUILD_SUBJECT">
    </action>
  </state>

  <state name="EVAL_ELIGIBILITY" autorun="yes">
    <description></description>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EVAL_ELIGIBILITY"
        resulting_state="CHECK_APPROVALS">
    </action>
  </state>

  <state name="CHECK_APPROVALS" autorun="yes">
    <description></description>

    <!-- All Approvals given -->
    <action name="I18N_OPENXPKI_WF_ACTION_DO_NOTHING2"
        resulting_state="NOTIFY_APPROVAL">
        <condition name="csr_cond_is_approved"/>
    </action>

    <!--  approval required -->
    <action name="I18N_OPENXPKI_WF_ACTION_DO_NOTHING"
        resulting_state="NOTIFY_CSR_PENDING">
        <condition name="!csr_cond_is_approved"/>
    </action>
  </state>

  <!--  Send notification if it was not send already -->
  <state name="NOTIFY_CSR_PENDING" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_DO_NOTHING"
        resulting_state="PENDING">
        <condition name="csr_cond_pending_notification_send"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_SEND_PENDING_NOTIFICATION"
        resulting_state="PENDING">
        <condition name="!csr_cond_pending_notification_send"/>
    </action>
  </state>

  <state name="FLAG_NOTIFY_SEND" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_FLAG_PENDING_NOTIFICATION_SEND"
        resulting_state="PENDING">
    </action>
  </state>

  <state name="PENDING">
    <description>This certification request is waiting to get its approvals. Please check the information,
    use the buttons to correct minor issues or reject the request if it is inevitably broken. If the request
    meets all requirements and you have verified it, please use the approve button to trigger its issue. </description>
     <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_SUBJECT"
        resulting_state="CANCEL_APPROVALS">
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_SAN"
        resulting_state="CANCEL_APPROVALS">
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_CERT_INFO"
        resulting_state="CANCEL_APPROVALS">
    </action>

    <action name="I18N_OPENXPKI_WF_ACTION_CSR_EDIT_VALIDITY"
        resulting_state="CANCEL_APPROVALS">
    </action>

    <action name="I18N_OPENXPKI_WF_ACTION_CSR_APPROVE_CSR"
        resulting_state="CHECK_APPROVALS">
        <condition name="csr_cond_acl_can_approve"/>
        <!-- Comment this condition to allow RA Operators to approve their own CRRs -->
        <!--  <condition name="!I18N_OPENXPKI_WF_COND_IS_WORKFLOW_CREATOR"/> -->
    </action>

    <action name="I18N_OPENXPKI_WF_ACTION_CSR_REJECT_REQUEST"
        resulting_state="REJECTED">
        <condition name="csr_cond_acl_can_reject"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_PUT_REQUEST_ON_HOLD"
        resulting_state="ONHOLD">
        <condition name="csr_cond_acl_can_approve"/>
    </action>
  </state>

  <state name="ONHOLD">
    <description>This request was set on hold by an adminstrative action. Consider to enter a comment and use the button to release the workflow.</description>
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_RELEASE_ON_HOLD"
        resulting_state="PENDING">
    </action>
  </state>

  <state name="CANCEL_APPROVALS" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_CANCEL_APPROVALS"
        resulting_state="UPDATE_SUBJECT">
    </action>
  </state>

  <state name="UPDATE_SUBJECT" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_RENDER_SUBJECT"
        resulting_state="PENDING">
    </action>
  </state>

  <state name="NOTIFY_APPROVAL" autorun="yes">
  <action name="I18N_OPENXPKI_WF_ACTION_CSR_NOTIFY_APPROVAL"
        resulting_state="APPROVED">
    </action>
  </state>

  <state name="APPROVED" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_LOAD_KEY_PASSWORD"
        resulting_state="KEY_PASSWORD_LOADED">
        <condition name="csr_cond_server_key_generation"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_GLOBAL_NULL"
        resulting_state="REQUEST_COMPLETE">
        <condition name="!csr_cond_server_key_generation"/>
    </action>
  </state>

 <state name="KEY_PASSWORD_LOADED" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_GENERATE_KEY"
        resulting_state="KEY_GENERATED">
        <condition name="csr_cond_server_key_generation"/>
    </action>
  </state>

 <state name="KEY_GENERATED" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_GENERATE_PKCS10"
        resulting_state="PKCS10_GENERATED">
    </action>
 </state>

 <state name="PKCS10_GENERATED" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_MOVE_KEY_TO_DP"
        resulting_state="REQUEST_COMPLETE">
    </action>
  </state>

  <state name="REQUEST_COMPLETE" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_PERSIST_CSR"
        resulting_state="NICE_ISSUE_CERTIFICATE">
    </action>
  </state>

  <state name="NICE_ISSUE_CERTIFICATE" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_NICE_ISSUE_CERTIFICATE"
            resulting_state="NICE_PICKUP_CERTIFICATE">
    </action>
  </state>

  <state name="NICE_PICKUP_CERTIFICATE" autorun="yes">

    <!-- syncronus backends return the certificate on issue, so no need for a pickup -->
    <action name="I18N_OPENXPKI_WF_ACTION_GLOBAL_NULL"
        resulting_state="NICE_CERTIFICATE_ISSUED">
        <condition name="I18N_OPENXPKI_WF_COND_NICE_CERTIFICATE_ISSUED"/>
    </action>

    <action name="I18N_OPENXPKI_WF_ACTION_NICE_FETCH_CERTIFICATE"
        resulting_state="NICE_CERTIFICATE_ISSUED">
        <condition name="!I18N_OPENXPKI_WF_COND_NICE_CERTIFICATE_ISSUED"/>
    </action>

  </state>

  <state name="NICE_CERTIFICATE_ISSUED" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_PERSIST_METADATA"
              resulting_state="NICE_METADATA_PERSISTED" />
  </state>

  <state name="NICE_METADATA_PERSISTED" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_RENAME_PRIVATE_KEY"
        resulting_state="CLEANUP_KEY_PASSWORD">
        <condition name="csr_cond_server_key_generation"/>
    </action>
    <action name="I18N_OPENXPKI_WF_ACTION_GLOBAL_NULL"
        resulting_state="NICE_SEND_NOTIFICATION">
        <condition name="!csr_cond_server_key_generation"/>
    </action>
  </state>

  <state name="CLEANUP_KEY_PASSWORD" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_CLEANUP_KEY_PASSWORD"
        resulting_state="NICE_SEND_NOTIFICATION" />
  </state>


  <state name="NICE_SEND_NOTIFICATION" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_NOTIFY_ISSUED"
              resulting_state="NICE_PUBLISH_CERTIFICATE" />
  </state>

  <!-- Generic Publication - call always and decide inside where to publish  -->
  <state name="NICE_PUBLISH_CERTIFICATE" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_PUBLISH_CERTIFICATE"
              resulting_state="SUCCESS">
    </action>
  </state>

  <state name="REJECTED" autorun="yes">
    <action name="I18N_OPENXPKI_WF_ACTION_CSR_NOTIFY_REJECTED"
            resulting_state="FAILURE">
    </action>
  </state>

  <state name="FAILURE" />
  <state name="SUCCESS">
  <description>This workflow finished with success. You can download the certifcate by clicking on the field names certificate_identifier.</description>
  </state>
</workflow>
