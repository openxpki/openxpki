## Written 2006 by Martin Bartosch for the OpenXPKI project
## Adapted for myperl-dbd-mysql by Scott Hardin
## Copyright (C) 2005-2014 by The OpenXPKI Project

%define pkgname myperl-dbd-mysql
%define filelist %{pkgname}-%{version}-filelist
%define NVR %{pkgname}-%{version}-%{release}
%define maketest 0
%define __perl /opt/myperl/bin/perl

name:      %{pkgname}
summary:   DBD::mysql packaged for myperl
version:   [% version %]
[% IF PKGREL %]
release: [% PKGREL %]
[% ELSE %]
release:   1
[% END %]
vendor:    OpenXPKI Project
packager:  Scott Hardin <scott@hnsc.de>
license:   Apache
group:     Applications/CPAN
url:       http://www.openxpki.org
buildroot: %{_tmppath}/%{name}-%{version}-%(id -u -n)
prefix:    %(echo %{_prefix})
BuildRequires: myperl
Requires: myperl
#source:    %{pkgname}-%{version}.tar.gz

%description
DBD::mysql packaged for myperl

Packaging information:
OpenXPKI version       [% version %]
Git commit hash:       [% GIT_COMMIT_HASH %]
Git description:       [% GIT_DESCRIPTION %]
Git tags:              [%- IF GIT_TAGS -%]
[%- GIT_TAGS -%]
[%- ELSE -%]
<no tag set>
[%- END %]

%prep
#%setup -q -n %{pkgname}-%{version} 
#chmod -R u+w %{_builddir}/%{pkgname}-%{version}

%build
#grep -rsl '^#!.*perl' . |
#grep -v '.bak$' |xargs --no-run-if-empty \
#%__perl -MExtUtils::MakeMaker -e 'MY->fixin(@ARGV)'
#CFLAGS="$RPM_OPT_FLAGS"
#%{__perl} Makefile.PL `%{__perl} -MExtUtils::MakeMaker -e ' print qq|PREFIX=%{buildroot}%{_prefix}| if \$ExtUtils::MakeMaker::VERSION =~ /5\.9[1-6]|6\.0[0-5]/ '` _MAKEPL_ARGS_
#%{__make} 
#%if %maketest
#%{__make} test
#%endif

%install
[ "%{buildroot}" != "/" ] && rm -rf %{buildroot}

PERL=%{__perl}

VENDORLIB=`%{__perl} "-V:vendorlib" | awk -F\' '{print $2}'`
VENDORARCH=`%{__perl} "-V:vendorarch" | awk -F\' '{print $2}'`
VENDORLIBEXP=%{buildroot}/`%{__perl} "-V:vendorlibexp" | awk -F\' '{print $2}'`
ARCHNAME=`%{__perl} "-V:archname" | awk -F\' '{print $2}'`
ARCHLIB=`%{__perl} "-V:archlib" | awk -F\' '{print $2}'`
PRIVLIB=`%{__perl} "-V:privlib" | awk -F\' '{print $2}'`
CPANM=/opt/myperl/bin/cpanm
CPANM_OPTS="--notest --skip-satisfied --skip-installed --verbose $CPANM_MIRROR"

# Environment vars neede for proper Perl module installation
export PERL5LIB=%{buildroot}/$VENDORARCH:%{buildroot}/$VENDORLIB
export PERL_MB_OPT="--destdir '%{buildroot}' --installdirs vendor"
export PERL_MM_OPT="INSTALLDIRS=vendor DESTDIR=%{buildroot}"
export DESTDIR="%{buildroot}"

$CPANM $CPANM_OPTS Test::NoWarnings
$CPANM $CPANM_OPTS Test::Tester Test::Deep DBD::mysql

## This next line does a regular CPAN-style install. Our Mojo app, however,
## needs to go in /srv/www/enroller and *not* with the other Perl modules.
## If you *do* decide to install CPAN-style, the Mojo app won't find its
## templates and public directories.
##%{makeinstall} `%{__perl} -MExtUtils::MakeMaker -e ' print \$ExtUtils::MakeMaker::VERSION <= 6.05 ? qq|PREFIX=%{buildroot}%{_prefix}| : qq|DESTDIR=%{buildroot}| '`
#
#install -d -D -m 755 %{buildroot}/srv/www/enroller
#tar cf - lib public script templates | tar -C %{buildroot}/srv/www/enroller/ -x -f -

cmd=/usr/share/spec-helper/compress_files
[ -x $cmd ] || cmd=/usr/lib/rpm/brp-compress
[ -x $cmd ] && $cmd

## SuSE Linux
#if [ -e /etc/SuSE-release -o -e /etc/UnitedLinux-release ]
#then
#    %{__mkdir_p} %{buildroot}/var/adm/perl-modules
#    find %{buildroot} -name "perllocal.pod"  \
#        -exec '%{__sed} -e s+%{buildroot}++g {}' \;                 \
#        > %{buildroot}/var/adm/perl-modules/%{name}
#fi

# remove special files
find %{buildroot} -name "perllocal.pod" \
    -o -name ".packlist"                \
    -o -name "*.bs"                     \
    |xargs -i rm -f {}

# no empty directories
#find %{buildroot}%{_prefix}             \
#    -type d -depth                      \
#    -exec rmdir {} \; 2>/dev/null

%{__perl} -MFile::Find -le '
    find({ wanted => \&wanted, no_chdir => 1}, "%{buildroot}");
    #print "%doc  README.md";
    for my $x (sort @dirs, @files) {
        push @ret, $x unless indirs($x);
        }
    print join "\n", sort @ret;

    sub wanted {
        return if /auto$/;

        local $_ = $File::Find::name;
        my $f = $_; s|^\Q%{buildroot}\E||;
        return unless length;
        return $files[@files] = $_ if -f $f;

        $d = $_;
        /\Q$d\E/ && return for reverse sort @INC;
        $d =~ /\Q$_\E/ && return
            for qw|/etc %_prefix/man %_prefix/bin %_prefix/share /srv /var |;

        $dirs[@dirs] = $_;
        }

    sub indirs {
        my $x = shift;
        $x =~ /^\Q$_\E\// && $x ne $_ && return 1 for @dirs;
        }
    ' > %filelist

[ -z %filelist ] && {
    echo "ERROR: empty %files listing"
    exit -1
    }

%clean
[ "%{buildroot}" != "/" ] && rm -rf %{buildroot}

%files -f %filelist
%defattr(-,root,root)

#%attr(0755,root,openxpki) /srv/www/openxpki/mason-data

%changelog
* Mon Aug 15 2011 m.bartosch@cynops.de
- Fixed file permissions in package
* Thu Feb 03 2011 m.bartosch@cynops.de
- Renovated build process, using generic template mechanism
* Mon Nov 27 2006 m.bartosch@cynops.de
- Initial build.
