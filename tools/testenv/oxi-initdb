#!/bin/bash
## <info> Reset OpenXPKI certificates and database
test $(whoami) != "root" && echo "Please run this as root: sudo $0" && exit 1
set -o pipefail

#
# Exit handler
#
LOG=$(mktemp)
function _exit () {
    if [ $1 -ne 0 -a $1 -ne 333 ]; then
        echo -e "\nERROR ($0) Last command exited with code $1, output:" && cat $LOG
    fi
    rm -f $LOG
    exit $1
}
trap '_exit $?' EXIT

#
# Recreate certificates and DB
#
echo -e "Recreate database and certificates"

echo -e "- stop OpenXPKI"
systemctl stop openxpki-serverd.service

set -e

echo -e "- recreate database and tables"
$OXI_SOURCE_DIR/tools/testenv/mysql-create-db.sh >$LOG 2>&1
$OXI_SOURCE_DIR/tools/testenv/mysql-create-schema.sh >$LOG 2>&1

echo -e "- start OpenXPKI"
systemctl start openxpki-serverd.service

set +e
sec=0; error=1; sock=$(perl -e 'use OpenXPKI::Defaults; print $OpenXPKI::Defaults::SERVER_SOCKET')
while [ $error -ne 0 -a $sec -lt 20 ]; do
    test -e $sock; error=$?; sec=$[$sec+1]
    sleep 1
done
set -e

if [ $error -ne 0 ]; then
    echo -e "\nERROR: Could not start server. Please see logs in /var/log/openxpki"
    exit 333
fi

echo -e "- create and import sample certificates (takes a while!)"
rm -rf /etc/openxpki/ca/
rm -rf /etc/openxpki/local/keys/
# sampleconfig.sh now needs a running server
$OXI_TEST_SAMPLECONFIG_DIR/contrib/sampleconfig.sh                >$LOG 2>&1
chown -R openxpki:root /etc/openxpki/local/keys/
chmod -R 750 /etc/openxpki/local/keys/
chown -R www-data:www-data /etc/openxpki/tls/

# Make Root cert known to Debian so e.g. "curl https://$(hostname)/rpc/kwtbackdoor/openapi-spec/" works
echo -e "- import root certificate into Debian"
cp /etc/openxpki/tls/chain/OpenXPKI_Root_CA.crt /usr/local/share/ca-certificates/
update-ca-certificates > /dev/null
