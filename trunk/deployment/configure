#!/usr/bin/env bash
#
# OpenXPKI Configuration Script
#
# Written by Martin Bartosch for the OpenXPKI project 2006
# Copyright (c) 2006 by The OpenXPKI Project
#

CFG="bin/openxpki-metaconf"

CONFDIR="etc"
TEMPLATEDIR="$CONFDIR/templates"
TEMPLATE="default"

PREFIX="/usr"
DIST_ONLY=0

usage() {
    cat <<EOF
Usage: configure [OPTIONS]

Prepare OpenXPKI for installation.

Options:
   --help         display this help text and exit
   --prefix       set installation prefix (Default: $PREFIX)
   --distonly     Use before 'make dist'. Creates specially reduced Makefile.
   --             all options following -- are passed to openxpki-metaconf

This script prepares the OpenXPKI deployment environment for installation
on your system.

Example 1 - regular install from distribution:

./configure --prefix /usr/local
(g)make
(g)make install

Example 2 - prepare distribution tarball:
./configure --distonly
(g)make dist

EOF

}

METACONF_OPTS=""

# check infrastructure
ERRORS=0
# TODO: we should check non-standard modules used in the openxpki[adm|ctl]
# as well
echo "Checking required OpenXPKI Perl modules..."
for module in OpenXPKI OpenXPKI::Client ; do
    echo -n "$module: "
    if perl -e "use $module;" ; then
	echo "OK"
    else
	echo "NOT FOUND"
	ERRORS=1
    fi
done

if [ "$ERRORS" != "0" ] ; then
    echo "Pre-installation check found errors."
    echo "Please install the missing Perl modules before proceeding."
    exit 1
fi

UNAME=`uname`

if [ "$UNAME" == "SunOS" ]; then
    # Solaris does not support id -nu/-ng, extract usernames manually
    USER=`id|perl -n -e 's/.*uid=[0-9]+\(([a-z0-9]+)\).*/$1/; print $_'`;
    GROUP=`id|perl -n -e 's/.*gid=[0-9]+\(([a-z0-9]+)\).*/$1/; print $_'`;
else
    # we are on a "sane" system :-)
    USER=`id -nu`
    GROUP=`id -ng`
fi

ADMUSER="$USER"
ADMGROUP="$GROUP"
if [ "$USER" != "root" ] ; then
    echo "Preparing for non-root installation (user: $USER, group: $GROUP)"
    RUNUSER="$USER"
    RUNGROUP="$GROUP"
fi


[ -n "$RUNUSER" ] && METACONF_OPTS="$METACONF_OPTS --setcfg server.runuser=$RUNUSER"
[ -n "$RUNGROUP" ] && METACONF_OPTS="$METACONF_OPTS --setcfg server.rungroup=$RUNGROUP"
METACONF_OPTS="$METACONF_OPTS --setcfg server.admuser=$ADMUSER"
METACONF_OPTS="$METACONF_OPTS --setcfg server.admgroup=$ADMGROUP"

while [ -n "$1" ] ; do
    case "$1" in
	--help)
	    usage
	    exit 0
	    ;;
	--prefix)
	    PREFIX="$2"
	    shift
	    shift
	    ;;
        --distonly)
            DIST_ONLY=1
	    shift
            ;;
	--)
	    shift
	    METACONF_OPTS="$METACONF_OPTS $*"
	    echo "Additional options to openxpki-metaconf: '$*'"
	    shift $#
	    ;;
	*)
	    echo "Unrecognized option $1"
	    exit 1
	    ;;
    esac
done

BASH_SHELL=`which bash`

if [ "${DIST_ONLY}" != "0" ] ; then
	# Use "," as delimeter symbol when calling sed
	# change "[% shell.bash %]" line into actual path to bash
	# Keep initial file under the name Makefile.in
  sed -e "s,\[\% shell.bash \%\],$BASH_SHELL,g" < Makefile.in > Makefile
  echo
  echo "Specially reduced Makefile created. You may now prepare distribution tarball by running command:"
  echo
  echo "(g)make dist"
  echo
else
  echo "Configuring for installation in $PREFIX..."
  # create initial configuration with new prefix
  for T in $TEMPLATEDIR/* ; do
    echo "Creating template set configuration in $T"
    if [ -d $T ] ; then
	$CFG --config $T/openxpki.conf.in \
	    --writecfg $T/openxpki.conf \
	    --force \
	    --setcfg dir.prefix="$PREFIX" \
	    $METACONF_OPTS
    fi
  done

  echo "Creating Makefile..."
  $CFG --config $TEMPLATEDIR/$TEMPLATE/openxpki.conf \
    --setcfg shell.bash="$BASH_SHELL" \
    --file Makefile.in >Makefile

  echo
  echo "Initial configuration complete. You may now run"
  echo
  echo "(g)make"
  echo "(g)make install"
  echo
  echo "in order to build and install the OpenXPKI administrative environment."
  echo
fi

